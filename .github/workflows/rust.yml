name: Rust

on: [push]
            
jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: sitzungsverwaltung-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: sitzungsverwaltung-linux-amd64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: sitzungsverwaltung-amd64.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: sitzungsverwaltung-aarch64.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            bin: sitzungsverwaltung-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: sitzungsverwaltung-darwin-aarch64
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true
      - name: Rename binary (linux and macos)
        run: mv target/${{ matrix.platform.target }}/release/sitzungsverwaltung target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os != 'windows-latest'
          
      - name: Rename binary (windows)
        run: mv target/${{ matrix.platform.target }}/release/figctl.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os == 'windows-latest'
          
      - name: Release 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       - name: Install latest rust toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           default: true
#           override: true

#       - name: Build
#         run: cargo build --all --release && strip target/release/sitzungsverwaltung && mv target/release/sitzungsverwaltung target/release/sitzungsverwaltung_amd64

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             target/release/sitzungsverwaltung_amd64
#         env:
#           GITHUB_TOKEN: ${{ github.token }}

#   build-win:
#     runs-on: windows-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       - name: Install latest rust toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           default: true
#           override: true

#       - name: Build
#         run: cargo build --all --release

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: target/release/sitzungsverwaltung.exe
#         env:
#           GITHUB_TOKEN: ${{ github.token }}

#   build-mac:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       - name: Install latest rust toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           target: x86_64-apple-darwin
#           default: true
#           override: true

#       - name: Build for mac
#         run: cargo build --all --release && strip target/release/sitzungsverwaltung && mv target/release/sitzungsverwaltung target/release/sitzungsverwaltung_darwin

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             target/release/sitzungsverwaltung_darwin
#         env:
#           GITHUB_TOKEN: ${{ github.token }}

#   build-arm:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       - name: Install Rust Toolchain
#         uses: dtolnay/rust-toolchain@stable
#         with:
#           toolchain: stable
#           targets: aarch64-unknown-linux-gnu

#       - name: Install compiler tools (as we're cross-compiling)
#         run: sudo apt install -y gcc-aarch64-linux-gnu pkg-config libssl-dev

#       - name: Setup caching
#         uses: Swatinem/rust-cache@v2

#       - name: Build release artifact
#         # run: cargo build --all --release --target aarch64-unknown-linux-gnu && strip target/release/sitzungsverwaltung && mv target/release/sitzungsverwaltung target/release/sitzungsverwaltung_arm
#         run: cargo build --all --release --target aarch64-unknown-linux-gnu && ls target
        # env:
        #   CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: "aarch64-linux-gnu-gcc"

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             target/release/sitzungsverwaltung_arm
#         env:
#           GITHUB_TOKEN: ${{ github.token }}
